{
	// Place your .dotfiles workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Snowfall module": {
		"scope": "nix",
		"prefix": "nixMod",
		"body": [
			"{config, lib, pkgs, inputs, ...}:",
			"with lib;",
			"with lib.${1:namespace};",
			"let",
			"cfg = config.${1:namespace}.${2:module accessor};",
			"in {",
			"options.${1:namespace}.${2:module accessor} = { enable = mkEnableOption \"${3:module name}\"; };",
			"config = mkIf cfg.enable {",
			"$0",
			"};",
			"}"
		],
		"description": "Log output to console"
	},
	"Snowfall package": {
		"scope": "nix",
		"prefix": "nixPkg",
		"body": [
			"{config, lib, inputs, pkgs, stdenv, ...}:",
			"\n",
			"stdenv.mkDerivation ${1|rec,\" \"|}{",
			"pname = ${2:package name};",
			"installPhase = ''",
			"  ${0:install package}",
			"''",
			"src = {",
			"\n",
			"};",
			"}"
		],
	},
	"Snowfall Home": {
		"scope": "nix",
		"prefix": "nixHome",
		"body": [
			"{lib, config, pkgs, inputs, ...}:",
			"with lib.${1:namespace}; {",
			"$0",
			"\n",
			"}"
		]
	},
	"Snowfall system": {
		"scope": "nix",
		"prefix": "nixSys",
		"body": [
			"{lib, pkgs, inputs, system, target, format, virtual, systems, config, ...}:",
			"with lib;",
			"with lib.${1:namespace}; {",
			"$0",
			"\n",
			"}"
		]
	}
}